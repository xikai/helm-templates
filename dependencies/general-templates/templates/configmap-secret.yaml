{{- define "add-secret-env-data" }}
{{- $rt := $._ }}
{{- with $.data }}
  {{- $glob := printf "files/%s/%s" .folder .file }}
  {{- range $path, $bytes := $rt.Files.Glob $glob }}
    {{- $content := $rt.Files.Get $path }}
    {{- range $key, $value := ( $content | fromYaml ) }}
{{ $key }}: |-
  {{- $value | toString | b64enc | nindent 2 }}
    {{- end }}
  {{- end }}
{{- end }}
{{- end }}

{{- define "add-key-value-data" }}
{{- $rt := $._ }}
{{- with $.data }}
  {{- $glob := printf "files/%s/%s" .folder .file }}
  {{- range $path, $bytes := $rt.Files.Glob $glob }}
    {{- $content := $rt.Files.Get $path }}
    {{- range $key, $value := ( $content | fromYaml ) }}
{{ $key }}: |-
  {{- $value | toString | nindent 2 }}
    {{- end }}
  {{- end }}
{{- end }}
{{- end }}

{{- define "add-secret-env-data-decoded" }}
{{- template "add-key-value-data" . }}
{{- end }}

{{- define "add-configmap-env-data" }}
{{- template "add-key-value-data" . }}
{{- end }}

{{- define "create-secret-env" }}
{{- range $name, $values := $.Values.secretEnv }}
  {{- $content := include "add-secret-env-data-decoded" (dict "_" $ "data" $values)}}
  {{- if not (empty $content) }}
---
## template secret env {{ $name }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $name }}
  namespace: {{ $.Release.Namespace }}
type: Opaque
stringData:
  {{- $content | indent 2 }}
  {{- else }}
## template secret env {{ $name }} - empty
  {{- end }}
{{- end }}
{{- end }}


{{- define "create-configmap-env" }}
{{- range $name, $values := $.Values.configMapEnv }}
  {{- $content := include "add-configmap-env-data" (dict "_" $ "data" $values)}}
  {{- if not (empty $content) }}
---
## template secret env {{ $name }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $name }}
  namespace: {{ $.Release.Namespace }}
data:
  {{- $content | indent 2 }}
  {{- else }}
## template configmap env {{ $name }} - empty
  {{- end }}
{{- end }}
{{- end }}


{{- define "add-secret-files-data-raw" }}
{{- $rt := $._ }}
{{- with $.data }}
  {{- $glob := printf "files/%s/%s" .folder .file }}
  {{- range $path, $bytes := $rt.Files.Glob $glob }}
    {{- $content := $rt.Files.Get $path }}
{{ base $path }}: {{ $content | toString | b64enc }}
  {{- end }}
{{- end }}
{{- end }}

{{- define "add-secret-files-data" }}
{{- $rt := $._ }}
{{- with $.data }}
{{ ($rt.Files.Glob (printf "files/%s/%s" .folder .file)).AsSecrets }}
{{- end }}
{{- end }}

{{- define "add-secret-files-data-decoded" }}
{{- $rt := $._ }}
{{- with $.data }}
{{ ($rt.Files.Glob (printf "files/%s/%s" .folder .file)).AsConfig }}
{{- end }}
{{- end }}


{{- define "create-secret-files" }}
{{- range $name, $values := $.Values.secretFiles }}
  {{- $content := include "add-secret-files-data-decoded" (dict "_" $ "data" $values)}}
  {{- if (not (empty ($content | fromYaml )))}}
---
## template secret files
apiVersion: v1
kind: Secret
metadata:
  name: {{ $name }}
  namespace: {{ $.Release.Namespace }}
type: Opaque
stringData:
  {{- $content | indent 2 }}
  {{- else }}
## template secret files {{ $name }} - empty
  {{- end }}
{{- end }}
{{- end }}


{{- define "add-configmap-files-data-raw" }}
{{- $rt := $._ }}
{{- with $.data }}
  {{- $glob := printf "files/%s/%s" .folder .file }}
  {{- range $path, $bytes := $rt.Files.Glob $glob }}
    {{- $content := $rt.Files.Get $path }}
{{ base $path }}: |
  {{- $content | nindent 2 }}
  {{- end }}
{{- end }}
{{- end }}

{{- define "add-configmap-files-data" }}
{{- $rt := $._ }}
{{- with $.data }}
{{ ($rt.Files.Glob (printf "files/%s/%s" .folder .file)).AsConfig }}
{{- end }}
{{- end }}

{{- define "create-configmap-files" }}
{{- range $name, $values := $.Values.configMapFiles }}
  {{- $content := include "add-configmap-files-data" (dict "_" $ "data" $values)}}
  {{- if (not (empty ($content | fromYaml )))}}
---
## template configmap files
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $name }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- with .labels }}
{{ toYaml . | indent 4 }} 
    {{- end }}  
data:
  {{- $content | indent 2 }}
  {{- else }}
## template configmap files {{ $name }} - empty
  {{- end }}
{{- end }}
{{- end }}


{{- define "create-secret-binary-files"}}
{{- range $name, $values := $.Values.secretBinaryFiles }}
  {{- $content := include "add-secret-files-data" (dict "_" $ "data" $values)}}
  {{- if (not (empty ($content | fromYaml )))}}
---
## template secret binary files
apiVersion: v1
kind: Secret
metadata:
  name: {{ $name }}
  namespace: {{ $.Release.Namespace }}
type: Opaque
data:
  {{- $content | indent 2 }}
  {{- else }}
## template secret binary files {{ $name }} - empty
  {{- end }}
{{- end }}
{{- end }}


{{- define "create-configmap-binary-files"}}
{{- range $name, $values := $.Values.configMapBinaryFiles }}
  {{- $content := include "add-secret-files-data" (dict "_" $ "data" $values)}}
  {{- if (not (empty ($content | fromYaml )))}}
---
## template configmap binary files
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $name }}
  namespace: {{ $.Release.Namespace }}
binaryData:
  {{- $content | indent 2 }}
  {{- else }}
## template configmap binary files {{ $name }} - empty
  {{- end }}
{{- end }}
{{- end }}


{{- define "create-configmap-secrets" }}
{{- template "create-secret-env" . }}
{{- template "create-configmap-env" . }}
{{- template "create-secret-files" . }}
{{- template "create-configmap-files" . }}
{{- template "create-secret-binary-files" . }}
{{- template "create-configmap-binary-files" . }}
{{- end }}